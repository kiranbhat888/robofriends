{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","cardsArray","robots","map","robot","SearchBox","onSearchChange","style","marginBottom","placeholder","type","onChange","Scroll","props","overflow","border","height","children","ErrorBiundary","state","hasError","error","info","console","log","this","setState","Component","App","event","searchText","target","value","x","fetch","then","response","json","users","prevProps","prevState","snapshot","filteredRobots","filter","toLocaleLowerCase","includes","length","ErrorBoundary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAEnB,MAAM,CAEF,sBAAKC,UAAU,oDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,SAJ4DF,KCUjEM,EAbE,SAAC,GAAgB,IAGxBC,EAHuB,EAAbC,OAGUC,KAAI,SAACC,EAAOV,GAClC,OAAO,cAAC,EAAD,CAAeC,KAAMS,EAAMT,KAAMD,GAAIU,EAAMV,GAAIE,MAAOQ,EAAMR,OAAjDF,MAEtB,OACI,8BACKO,KCDEI,EARG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAChB,OACI,qBAAKC,MAAO,CAACC,aAAa,QAA1B,SACA,uBAAOX,UAAU,mCAAmCY,YAAY,gBAAgBC,KAAK,SAASC,SAAUL,OCMjGM,G,MATA,SAACC,GAEZ,OACI,qBAAKN,MAFG,CAACO,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAE3D,SACKH,EAAMI,aCcJC,E,kDAjBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAMC,GACpBC,QAAQC,IAAIH,EAAMC,GAClBG,KAAKC,SAAS,CAACN,UAAS,M,oBAG5B,WACI,OAAOK,KAAKN,MAAMC,SAAW,2CAAqBK,KAAKZ,MAAMI,a,GAdzCU,aCqDbC,E,kDA9CX,WAAYf,GAAQ,IAAD,8BACf,gBAkBJP,eAAiB,SAACuB,GACd,EAAKH,SAAS,CAAEI,WAAYD,EAAME,OAAOC,SAlBzC,EAAKb,MAAQ,CACTjB,OAAQ,GACR4B,WAAY,IAJD,E,qDASnB,WAAqB,IAAD,OACZG,EAAIC,MAAM,8CACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAExB,OAAQoC,OAC3Cf,QAAQC,IAAIS,K,gCAEhB,SAAmBM,EAAWC,EAAWC,M,oBASzC,WACI,MAA+BhB,KAAKN,MAA5BjB,EAAR,EAAQA,OAAQ4B,EAAhB,EAAgBA,WACVY,EAAiBxC,EAAOyC,QAAO,SAAAvC,GACjC,OAAOA,EAAMT,KAAKiD,oBAAoBC,SAASf,EAAWc,wBAG9D,OAAQ1C,EAAO4C,OAEP,cAACC,EAAD,UACI,sBAAKlD,UAAU,KAAf,UACI,oBAAIA,UAAU,cAAd,0BACA,cAAC,EAAD,CAAWS,eAAgBmB,KAAKnB,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUJ,OAAQwC,WAPb,oBAAI7C,UAAU,cAAd,yC,GA/Bf8B,aCIHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d0fc5a19.chunk.js","sourcesContent":["import React from 'react';  \n\nconst Card = ({id,name,email}) => {\n    // const {id,name,email} = props;\n    return[\n        // <h1>RoboFriends</h1>,\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \" key={id}>\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    ];\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    // if (true)\n    //     throw new Error('Noooooooooooo..');\n    const cardsArray = robots.map((robot, id) => {\n        return <Card key={id} name={robot.name} id={robot.id} email={robot.email} />\n    });\n    return (\n        <div>\n            {cardsArray}\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({onSearchChange}) => {\n    return(\n        <div style={{marginBottom:'10px'}}>\n        <input className=\"pa3 ba b--grenn bg-lightest-blue\" placeholder=\"search robots\" type=\"search\" onChange={onSearchChange} />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    let style = {overflow:'scroll',border:'3px solid black',height:'800px'}\n    return (\n        <div style={style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBiundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        console.log(error,info);\n        this.setState({hasError:true})\n    }\n\n    render() {\n        return this.state.hasError ? <h1>Error....</h1> : this.props.children;\n    }\n}\n\nexport default ErrorBiundary","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\n// import { robots } from './robots';\nimport './App.css';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            robots: [],\n            searchText: ''\n        }\n    }\n\n    //life cycle methods\n    componentDidMount() {\n        let x = fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n        console.log(x);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log(prevState);\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchText: event.target.value });\n\n    }\n\n    render() {\n        const { robots, searchText } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(searchText.toLocaleLowerCase());\n        }\n        );\n        return !robots.length ? (<h1 className='f1 increase'>Robo Friends LOADING...</h1>) :\n            (\n                <ErrorBoundary>\n                    <div className=\"tc\">\n                        <h1 className='f1 increase'>Robo-Friends</h1>\n                        <SearchBox onSearchChange={this.onSearchChange} />\n                        <Scroll>\n                            <CardList robots={filteredRobots} />\n                        </Scroll>\n                    </div>\n                </ErrorBoundary>\n            );\n\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}